version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gnosh-observer
    depends_on:
      - db
      - prometheus
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSL_MODE=${DB_SSL_MODE}
      - P2P_BOOTSTRAP_ADDRESSES=${P2P_BOOTSTRAP_ADDRESSES}
      - P2P_ENVIRONMENT=${P2P_ENVIRONMENT}
      - P2P_DISCOVERY_NAMESPACE=${P2P_DISCOVERY_NAMESPACE}
    ports:
      - "8080:8080"
    networks:
      - app-network
    command: ["./observer", "start", "--rpc-url", "wss://rpc.gnosischain.com/wss", "--p2pkey", "CAESQMl3XPvSPMdLdbVg0M3/5ZenGuk5+Ve0diP0i3F9WH76Xw3ax7KRmBm8CjOcv8FpfINtlW9NrIpsWjeliuGybew="]

  db:
    image: postgres:14.12
    container_name: postgres-db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
